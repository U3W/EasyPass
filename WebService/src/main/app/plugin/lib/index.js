function _instanceof(a,b){return null!=b&&"undefined"!=typeof Symbol&&b[Symbol.hasInstance]?!!b[Symbol.hasInstance](a):a instanceof b}function _classCallCheck(a,b){if(!_instanceof(a,b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}var os=require("os"),CombineWorkboxPrecachesPlugin=function(){function a(b,c){_classCallCheck(this,a),_defineProperty(this,"pluginName","[combine-workbox-precaches-plugin] "),this.mode=b,this.fileName=null===c?"service-worker.js":c}return _createClass(a,[{key:"apply",value:function apply(b){var c=this;b.hooks.emit.tapAsync("WorkboxSavePrecachePlugin",async function(b,d){if(void 0===a.amount)throw c.pluginName+"You need to set the amount of precaches of the WorkboxCombinePrecachesPlugin through `WorkboxCombinePrecachesPlugin.amount = your_amount` before using the plugin.";else if("save"===c.mode){if(a.counter>=a.amount)throw c.pluginName+"When calling the WorkboxCombinePrecachesPlugin on the last precache you need to use the mode `combine`";else{var e=b.assets[c.fileName].source(),f=e.substring(0,e.search(";")+1);a.cache.push(f),delete b.assets[c.fileName],a.counter++,a.counter+1===a.amount&&(a.flag=!0),d()}}else if("combine"!==c.mode)throw c.pluginName+"Unknown mode: "+c.mode;else if(!1===a.flag&&(await c.wait()),a.counter+1===a.amount){a.cache.forEach(function(b){return a.addPrecache(b)});var g=a.precaches+b.assets[c.fileName].source();b.assets[c.fileName]={source:function source(){return g},size:function size(){return g.length}},d()}else throw c.pluginName+"Expected more precaches."})}},{key:"sleep",value:async function sleep(a){return new Promise(function(b){return setTimeout(b,a)})}},{key:"wait",value:async function wait(){console.log(this.pluginName+"Waiting for precaches...");for(var b=0;!a.flag;){if(b>a.timeout)throw this.pluginName+"Combining precaches extended timeout";await this.sleep(100),b+=100}}}],[{key:"addPrecache",value:function addPrecache(a){this.precaches+=a+os.EOL}}]),a}();_defineProperty(CombineWorkboxPrecachesPlugin,"amount",void 0),_defineProperty(CombineWorkboxPrecachesPlugin,"counter",0),_defineProperty(CombineWorkboxPrecachesPlugin,"flag",!1),_defineProperty(CombineWorkboxPrecachesPlugin,"cache",[]),_defineProperty(CombineWorkboxPrecachesPlugin,"precaches",""),_defineProperty(CombineWorkboxPrecachesPlugin,"timeout",2e3),module.exports=CombineWorkboxPrecachesPlugin;
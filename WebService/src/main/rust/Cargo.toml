[package]
name = "wasm"
version = "0.1.0"
authors = ["Kacper Urbaniec <at.kacper.urbaniec@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
c2-chacha = "0.2.2"
poly1305 = "0.5.2"
wasm-bindgen = {version = "0.2.54", features = ["serde-serialize"] }
#wasm-bindgen-futures = {version = "0.3.27", features = ["futures_0_3"] }
wasm-bindgen-futures = "0.4.4"
# futures = "0.1.20"
futures-preview = { version = "=0.3.0-alpha.18", features = ["async-await", "nightly"] }
#futures = "0.3.1"
js-sys = "0.3.31"
serde_json = "1.0.32"
serde_derive = "^1.0.59"
serde = { version = "1.0.80", features = ["derive"] }
base64 = "0.11.0"
rand = "0.7.2"
rust-argon2 = "0.7.0"
x25519-dalek = "0.6.0"
sha3 = "0.8.2"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }


[dependencies.web-sys]
version = "0.3"
features = [
  "Window"
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
